---
title: "h235_3_save_unionHumanMA_unionHumanPR_PUREcluster"
format:
  html:
    df-print: kable
    fig-width: 10
    fig-height: 7
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
    toc-depth: 3
    number-sections: false
    standalone: true
    embed-resources: true
editor: source
execute:
  cache: false
editor_options:
  chunk_output_type: console
---

# INITITATE

```{r}

#' # INITIIEREN ####
.libPaths()

library(toolboxH)
library(Seurat)

library(here)

```

# AIM

Save filtered objects for analyses

# LOAD

```{r}

seurat_pre = readRDS(here("R/results/h228_3_qc_integrated_rpca_cellanno_FILTEREDqc_FILTEREDpureCells.rds"))
seurat_pre$uniform_name_overview_keep %>% mytable()
seurat_pre


cellanno_pre = fread(here("R/results/h228_3_qc_integrated_rpca_cellanno_FILTEREDqc_FILTEREDpureCells.txt.gz"))
qlist1 = venn2(cellanno_pre$rn, colnames(seurat_pre))
cellanno = cellanno_pre[rn %in% colnames(seurat_pre)]
```

```{r}
humanMA = readRDS(here("R/results/h227_2_humanMA_rpca_FILTERED_JOINED_seurat.RDS"))
humanMA
humanPR = readRDS(here("R/results/h227_2_humanPR_rpca_FILTERED_JOINED_seurat.RDS"))
humanPR

qlist2 = venn3(colnames(humanMA),
               colnames(humanPR),
               colnames(seurat_pre))

```

# Restrict to relevant celltypes
```{r}
allcelltypes_pre = unique(seurat_pre$uniform_name_overview3)
allcelltypes = setdiff(allcelltypes_pre,"")
allcelltypes

cellanno = cellanno[uniform_name_overview3 %in% allcelltypes]
seurat = seurat_pre[, seurat_pre$uniform_name_overview3 %in% allcelltypes]
seurat

humanMA = humanMA[, humanMA$uniform_name_overview %in% allcelltypes & colnames(humanMA) %in% cellanno$rn]
humanPR = humanPR[, humanPR$uniform_name_overview %in% allcelltypes& colnames(humanPR) %in% cellanno$rn]

qlist3 = venn3(colnames(humanMA),
               colnames(humanPR),
               colnames(seurat))


```

# add important annotations
```{r}
humanMA$uniform_name_overview3 = cellanno[match_hk(colnames(humanMA), cellanno$rn), uniform_name_overview3]
table(humanMA$uniform_name_overview3, humanMA$uniform_name_overview)

humanPR$uniform_name_overview3 = cellanno[match_hk(colnames(humanPR), cellanno$rn), uniform_name_overview3]
table(humanPR$uniform_name_overview3, humanPR$uniform_name_overview)
```


```{r}
humanMA$severity = ifelse(humanMA$species =="human", humanMA$who_per_sample, humanMA$timepoint)
humanMA$severity %>% mytable()

humanPR$severity = ifelse(humanPR$species =="human", humanPR$who_per_sample, humanPR$timepoint)
humanPR$severity %>% mytable()

```

## genes
```{r}
qlist3 = venn2(rownames(humanMA),
               rownames(humanPR))
```

## human with all genes

```{r}
humanfull = readRDS(here("R/results/h220_5_qc_human_singlestudy.rds"))
humanfull
humanfull$severity = humanfull$who_per_sample

qlist5 = venn2(colnames(humanfull), cellanno$rn)

humanfull = humanfull[, colnames(humanfull) %in% cellanno$rn]
humanfull
humanfull$uniform_name_overview3 = cellanno[match_hk(colnames(humanfull), cellanno$rn), uniform_name_overview3]
table(humanfull$uniform_name_overview3, humanfull$uniform_name_overview)

DefaultAssay(humanfull) = "RNA"
humanfull= DietSeurat(humanfull, layers =  c("counts", "data") , assays = "RNA")
humanfull$species = "human"
human_cellanno = humanfull@meta.data %>% data.table(keep.rownames = T)
human_cellanno[,.N, .(lowQC_or_doublet_cell,lowQC_or_doublet_cluster)]


```

## save 
```{r}
fwrite(human_cellanno, here("R/results/h235_3_humanMA_union_FILTEREDcelltype.txt.gz"))
saveRDS(humanfull, here("R/results/h235_3_human_FILTEREDcelltype.RDS"))

saveRDS(humanMA, here("R/results/h235_3_humanMA_union_FILTEREDcelltype.RDS"))
saveRDS(humanPR, here("R/results/h235_3_humanPR_union_FILTEREDcelltype.RDS"))

```


## finalize

```{r}
finalizeSkript()

```

R version 4.2.3 (2023-03-15 ucrt)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 19045)

Matrix products: default

locale:
[1] LC_COLLATE=German_Germany.utf8  LC_CTYPE=German_Germany.utf8   
[3] LC_MONETARY=German_Germany.utf8 LC_NUMERIC=C                   
[5] LC_TIME=German_Germany.utf8    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] here_1.0.1              Seurat_4.9.9.9044       SeuratObject_4.9.9.9084
 [4] sp_1.6-0                toolboxH_0.2.17         eulerr_7.0.0           
 [7] testthat_3.1.7          stringr_1.5.0           scales_1.2.1           
[10] readxl_1.4.2            RColorBrewer_1.1-3      png_0.1-8              
[13] fdrtool_1.2.17          R.utils_2.12.2          R.oo_1.25.0            
[16] R.methodsS3_1.8.2       data.table_1.14.8      

loaded via a namespace (and not attached):
  [1] Rtsne_0.16             colorspace_2.1-0       deldir_1.0-6          
  [4] ellipsis_0.3.2         ggridges_0.5.4         rprojroot_2.0.3       
  [7] RcppHNSW_0.4.1         spatstat.data_3.0-1    rstudioapi_0.14       
 [10] leiden_0.4.3           listenv_0.9.0          ggrepel_0.9.3         
 [13] RSpectra_0.16-1        fansi_1.0.4            codetools_0.2-19      
 [16] splines_4.2.3          knitr_1.42             polyclip_1.10-4       
 [19] spam_2.9-1             jsonlite_1.8.4         ica_1.0-3             
 [22] cluster_2.1.4          uwot_0.1.14            spatstat.sparse_3.0-1 
 [25] shiny_1.7.4            sctransform_0.3.5      compiler_4.2.3        
 [28] httr_1.4.5             Matrix_1.5-3           fastmap_1.1.1         
 [31] lazyeval_0.2.2         cli_3.6.1              later_1.3.0           
 [34] htmltools_0.5.5        tools_4.2.3            igraph_1.4.1          
 [37] dotCall64_1.0-2        gtable_0.3.3           glue_1.6.2            
 [40] RANN_2.6.1             reshape2_1.4.4         dplyr_1.1.1           
 [43] Rcpp_1.0.10            scattermore_1.0        cellranger_1.1.0      
 [46] vctrs_0.6.1            nlme_3.1-161           spatstat.explore_3.1-0
 [49] progressr_0.13.0       lmtest_0.9-40          spatstat.random_3.1-4 
 [52] xfun_0.38              globals_0.16.2         brio_1.1.3            
 [55] mime_0.12              miniUI_0.1.1.1         lifecycle_1.0.3       
 [58] irlba_2.3.5.1          goftest_1.2-3          future_1.32.0         
 [61] MASS_7.3-58.2          zoo_1.8-11             spatstat.utils_3.0-2  
 [64] promises_1.2.0.1       parallel_4.2.3         yaml_2.3.7            
 [67] gridExtra_2.3          reticulate_1.28        pbapply_1.7-0         
 [70] ggplot2_3.4.2          stringi_1.7.12         fastDummies_1.6.3     
 [73] rlang_1.1.0            pkgconfig_2.0.3        matrixStats_0.63.0    
 [76] evaluate_0.21          lattice_0.20-45        tensor_1.5            
 [79] ROCR_1.0-11            purrr_1.0.1            patchwork_1.1.2       
 [82] htmlwidgets_1.6.2      cowplot_1.1.1          tidyselect_1.2.0      
 [85] parallelly_1.35.0      RcppAnnoy_0.0.20       plyr_1.8.8            
 [88] magrittr_2.0.3         R6_2.5.1               generics_0.1.3        
 [91] pillar_1.9.0           fitdistrplus_1.1-8     abind_1.4-5           
 [94] survival_3.5-0         tibble_3.2.1           future.apply_1.10.0   
 [97] KernSmooth_2.23-20     utf8_1.2.3             spatstat.geom_3.1-0   
[100] plotly_4.10.1          rmarkdown_2.21         grid_4.2.3            
[103] digest_0.6.31          xtable_1.8-4           tidyr_1.3.0           
[106] httpuv_1.6.9           munsell_0.5.0          viridisLite_0.4.2   
